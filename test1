#include "SFML/Graphics.hpp"
#include <time.h>
#include <stdlib.h>
#include <windows.h>
#include <iostream>

int main()
{
    /*
    sf::Clock zegar;
    sf::Time czas = zegar.getElapsedTime();
    sf::Time reset = zegar.restart();
    sf::Time sek = sf::seconds(10);
    */
    bool sync =true;
	sf::RenderWindow window(sf::VideoMode(600, 600), "SFML WORK!");
    window.setFramerateLimit(60);
    window.setVerticalSyncEnabled(sync);
    sf::View view(sf::FloatRect(0, 0, 600, 600));

	sf::Texture obraz;
	if (!obraz.loadFromFile("Obrazek.jpg")){}
	sf::Texture obraz1;
	if (!obraz1.loadFromFile("Obrazek1.jpg"))	{}
	sf::Texture obraz2;
	if (!obraz2.loadFromFile("Obrazek2.jpg")){}     //wczytuje obrazki
	sf::Texture obraz3;
	if (!obraz3.loadFromFile("Obrazek3.jpg")){}
    sf::Texture obraz4;
	if (!obraz4.loadFromFile("Obrazek4.jpg")){}



	sf::Sprite zdj;
	zdj.setTexture(obraz1);
	zdj.setPosition(100,550);

	sf::Sprite zdj2;
	zdj2.setTexture(obraz);
	sf::Vector2f pozycja;
	pozycja.x= 300;
	pozycja.y= 400;

	sf::Sprite zdj3;
	zdj3.setTexture(obraz2);
	zdj3.setPosition(100,200);

	sf::Sprite zdj4;
	zdj4.setTexture(obraz2);
	zdj4.setPosition(400,200);

	sf::Sprite zdj5;
	zdj5.setTexture(obraz3);

	sf::Sprite zdj6;
	zdj6.setTexture(obraz1);
	zdj6.setPosition(310,550);

	sf::Sprite zdj7;
	zdj7.setTexture(obraz1);
	zdj7.setPosition(-110,550);

	sf::Sprite zdj8;
	zdj8.setTexture(obraz4);
	zdj8.setPosition(100, 100);

	while (window.isOpen())
	{
        window.setView(view);
		sf::Event event;

		while (window.pollEvent(event))
		{
                if (event.type == sf::Event::Closed)
                window.close();
                if(event.type == sf::Event::KeyPressed && event.key.code == sf::Keyboard::Escape)
                    window.close();
                if (zdj.getGlobalBounds().intersects(zdj2.getGlobalBounds()) || zdj3.getGlobalBounds().intersects(zdj2.getGlobalBounds()) || zdj4.getGlobalBounds().intersects(zdj2.getGlobalBounds()) || zdj6.getGlobalBounds().intersects(zdj2.getGlobalBounds()) || zdj7.getGlobalBounds().intersects(zdj2.getGlobalBounds())) // odpowiada za kolizje przy spadaniu
            {
        if(event.type == sf::Event::KeyPressed && event.key.code == sf::Keyboard::Up)
        {
            pozycja.y-=250.0;
        }
            }
		}



        if(sf::Keyboard::isKeyPressed(sf::Keyboard::Left))
        {
                pozycja.x-=3.0;
        }
        if(sf::Keyboard::isKeyPressed(sf::Keyboard::Right))         //poruszanie sie <  ^  >
        {
                pozycja.x+=3.0;
        }


        zdj2.setPosition(pozycja.x, pozycja.y);
        if (zdj.getGlobalBounds().intersects(zdj2.getGlobalBounds()) || zdj3.getGlobalBounds().intersects(zdj2.getGlobalBounds()) || zdj4.getGlobalBounds().intersects(zdj2.getGlobalBounds()) || zdj6.getGlobalBounds().intersects(zdj2.getGlobalBounds()) || zdj7.getGlobalBounds().intersects(zdj2.getGlobalBounds())) // odpowiada za kolizje przy spadaniu
            {
                view.setCenter(pozycja.x, pozycja.y);                       //Kamera
                zdj5.setPosition(pozycja.x - 310, pozycja.y - 310);    //tło
            }
		else //powoduje spadanie
		{
			pozycja.y+=6;
            view.setCenter(pozycja.x, pozycja.y);                       //Kamera
            zdj5.setPosition(pozycja.x - 310, pozycja.y - 310);     //tło
		}


            sf::FloatRect rectToMove(pozycja, {zdj2.getGlobalBounds().width, zdj2.getGlobalBounds().width});
                    if(rectToMove.intersects(zdj3.getGlobalBounds()))
                {

             if (sf::Keyboard::isKeyPressed(sf::Keyboard::Left) && pozycja.x < zdj3.getPosition().x + zdj3.getGlobalBounds().width)
             {
                pozycja.x=zdj3.getPosition().x + zdj3.getGlobalBounds().width;
                pozycja.y+=5;
             }

             if (sf::Keyboard::isKeyPressed(sf::Keyboard::Right) && pozycja.x > zdj3.getPosition().x - zdj3.getGlobalBounds().width)   //Kolizja prawie dziala!
             {
                pozycja.x=zdj3.getPosition().x - zdj2.getGlobalBounds().width;
                pozycja.y+=5;
             }

             if (sf::Keyboard::isKeyPressed(sf::Keyboard::Up) && pozycja.y < zdj3.getPosition().y + zdj3.getGlobalBounds().height)
             {
                pozycja.y=zdj3.getPosition().y + zdj3.getGlobalBounds().height;
                pozycja.y+=19;
             }
                }



            if(pozycja.y >= 600)
            {
                window.close();
                std::cout << "GAME OVER!";
            }

		window.clear();

		window.draw(zdj5);
		window.draw(zdj);
		window.draw(zdj2);
		window.draw(zdj3);      //mapa
		window.draw(zdj4);
		window.draw(zdj6);
		window.draw(zdj7);
if (zdj3.getGlobalBounds().intersects(zdj2.getGlobalBounds()))  // zolte kolko
        {
            window.draw(zdj8);
        }
        sf::CircleShape kolko;
        kolko.setRadius(20);
        kolko.setFillColor(sf::Color::Yellow);
        kolko.setPosition(430, 150);
if (zdj4.getGlobalBounds().intersects(zdj2.getGlobalBounds()))  // grzybek
        {
            window.draw(kolko);
        }
		window.display();
	}
}
