//-------------------------------------------------------- DO main.cpp -----------------------------------------------------------------


#include "SFML/Graphics.hpp"
#include <time.h>
#include <stdlib.h>
#include <windows.h>
#include <iostream>
#include <math.h>
#include <Gracz.h>

int main()
{
    sf::Clock zegar;
    sf::Time czas;
	sf::RenderWindow oknogry(sf::VideoMode(600, 600), "SFML WORK!");
	bool gora, lewo, prawo = false;
    oknogry.setFramerateLimit(60);
    oknogry.setVerticalSyncEnabled(true);
    sf::View widok(sf::FloatRect(0, 0, 600, 600));

    sf::Texture postacTX;
	postacTX.loadFromFile("Postac.jpg");
	sf::Sprite postac(postacTX);

	sf::Texture tekstura[10];
	tekstura[1].loadFromFile("Tlo.jpg");
	tekstura[2].loadFromFile("Obrazek1.jpg");
	sf::Sprite sprajt[10];
    sprajt[1].setTexture(tekstura[1]);
    sprajt[2].setTexture(tekstura[2]);
    sprajt[2].setTextureRect(sf::IntRect(0, 0, 100, 50));  //wymiary obiektow

	Gracz graczObj(postac);








	Obiekt obiekty[ilosc] = {Obiekt( 0, 600, sprajt[2]),
                                Obiekt( 100, 600, sprajt[2]),
                                Obiekt( 200, 600, sprajt[2]),
                                Obiekt( 300, 600, sprajt[2]),
                                Obiekt( 400, 600, sprajt[2]),
                                Obiekt( 500, 600, sprajt[2]),};





	while (oknogry.isOpen())
	{
        oknogry.setView(widok);
		sf::Event zdarzenie;

		while (oknogry.pollEvent(zdarzenie))
		{
                if (zdarzenie.type == sf::Event::Closed)
                oknogry.close();
                if(zdarzenie.type == sf::Event::KeyPressed && zdarzenie.key.code == sf::Keyboard::Escape)
                    oknogry.close();
		}
		if(sf::Keyboard::isKeyPressed(sf::Keyboard::Right)) prawo = true;
        if(sf::Keyboard::isKeyPressed(sf::Keyboard::Left)) lewo = true;
        if(sf::Keyboard::isKeyPressed(sf::Keyboard::Up)) gora = true;
        if(!(sf::Keyboard::isKeyPressed(sf::Keyboard::Up))) gora = false;               //Sterowanie
        if(!(sf::Keyboard::isKeyPressed(sf::Keyboard::Right))) prawo = false;
        if(!(sf::Keyboard::isKeyPressed(sf::Keyboard::Left))) lewo = false;

        graczObj.sterowanie(gora, lewo, prawo, obiekty, zdarzenie);        //Kolizja i Poruszanie sie

		widok.setCenter(graczObj.obraz.getPosition().x, 350); //Kamera
        sprajt[1].setPosition(graczObj.obraz.getPosition().x - oknogry.getSize().x/2 - 10, 50);


		oknogry.clear();
        oknogry.draw(sprajt[1]);
        for(int i = 0; i <=5; i++)
        {
        oknogry.draw(obiekty[i].obraz);
        }
        oknogry.draw(graczObj.obraz);
		oknogry.display();
	}
}


//---------------------------------------------------------- DO Gracz.h -----------------------------------------------------------------


#ifndef GRACZ_H
#define GRACZ_H
#include "SFML/Graphics.hpp"
#include <iostream>

const int ilosc = 6;

class Obiekt
{
    public:
        float xPoz, yPoz, xRuch, yRuch, SCgorna, SCdolna, SCprawa, SClewa;
        sf::Sprite obraz;
        Obiekt(int PobXPoz, int PobYPoz, sf::Sprite sprajt)
        {
            obraz = sprajt;
            obraz.setPosition(PobXPoz, PobYPoz);
            SClewa = obraz.getPosition().x;
            SCprawa = obraz.getPosition().x + obraz.getGlobalBounds().width;
            SCgorna = obraz.getPosition().y;
            SCdolna = obraz.getPosition().y + obraz.getGlobalBounds().height;
        }
};

class Gracz
{
    public:
        bool Koliduje, Stanie, Skok;
        float xRuch, yRuch, xPoz, yPoz;
        sf::Clock zegar;
        sf::Time czas;
        sf::Sprite obraz;
        Gracz(sf::Sprite postac)
        {
            obraz = postac;
            xRuch = 0;
            yRuch = 0;
            xPoz = 0;
            yPoz = 0;
            Koliduje = false;
            Stanie = false;
            Skok = true;
        }
        void sterowanie(bool gora, bool lewo, bool prawo, Obiekt obiekty[ilosc], sf::Event &zdarzenie)
        {
                if(Stanie)
                {
                    Skok = true;
                    zegar.restart();
                }
                else
                {
                    yRuch = 12;
                }
                if(prawo)
                {
                    xRuch = 4;
                }
                if(lewo)
                {
                    xRuch = -4;
                }
                if(zegar.getElapsedTime().asMilliseconds() > 350 || (zdarzenie.type == sf::Event::KeyReleased && zdarzenie.key.code == sf::Keyboard::Up))
                {
                    Skok = false;
                }
                if(gora && Skok)
                {
                    Stanie = false;
                    zegar.getElapsedTime();
                    yRuch = -14;
                }
                if(!(prawo || lewo))
                {
                    xRuch = 0;
                }
                obraz.setPosition(sf::Vector2f(obraz.getPosition().x + xRuch, obraz.getPosition().y));
                kolizja(xRuch, 0, obiekty);
                obraz.setPosition(sf::Vector2f(obraz.getPosition().x, obraz.getPosition().y + yRuch));
                kolizja(0, yRuch, obiekty);
        }


        void kolizja(float xRuchDelta, float yRuchDelta, Obiekt obiekty[ilosc])
        {
            for(int i = 0; i <=5; i++)
            {
                if(obraz.getPosition().x + obraz.getGlobalBounds().width > obiekty[i].SClewa && obraz.getPosition().x < obiekty[i].SCprawa &&
                    obraz.getPosition().y + obraz.getGlobalBounds().height > obiekty[i].SCgorna && obraz.getPosition().y < obiekty[i].SCdolna)
                {
                    Koliduje = true;
                }
                else
                {
                    Koliduje = false;
                }
                if(Koliduje)
                {
                    if(xRuchDelta > 0)
                    {
                        obraz.setPosition(sf::Vector2f(obiekty[i].SClewa - obraz.getGlobalBounds().width, obraz.getPosition().y));
                    }
                    if(xRuchDelta < 0)
                    {
                        obraz.setPosition(sf::Vector2f(obiekty[i].SCprawa, obraz.getPosition().y));
                    }
                    if(yRuchDelta > 0)
                    {
                        obraz.setPosition(sf::Vector2f(obraz.getPosition().x, obiekty[i].SCgorna - obraz.getGlobalBounds().height));
                        Stanie = true;
                    }
                    if(yRuchDelta < 0)
                    {
                        Skok = false;
                        obraz.setPosition(sf::Vector2f(obraz.getPosition().x, obiekty[i].SCdolna));
                    }
                }
            }
        }


};

#endif // GRACZ_H
